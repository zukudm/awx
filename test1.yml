- name: test
  hosts: "{{ host }}"

  tasks:

  # - name: wait for pods to come up
  #   shell: kubectl get pods --namespace ansible-awx -o json
  #   register: kubectl_get_pods
  #   until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  #   retries: 2
  #   delay: 2


    

    - name: Wait for nodes to be ready
      command: minikube kubectl -- get pod --namespace=ansible-awx
      register: nodes
      until:      
        - '" Running "  in nodes.stdout'      
      retries: 6
      delay: 2
      ignore_errors: yes

    # - debug: 
    #     msg: "{{ nodes2 }}"

    # - name: Wait for control-plane pods become ready
    #   shell: kubectl wait --namespace=ansible-awx --for=condition=Running  --timeout=600s
    #   register: control_plane_pods_ready

    # - debug: var=control_plane_pods_ready.stdout_lines


    - name: wait for pods to come up
      shell: kubectl get pods -o json --namespace=ansible-awx
      register: kubectl_get_pods
      until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]

    - name: install pip3
      become: yes
      apt: name=python3-pip state=present 

    - name: install pre-requisites
      become: yes
      pip:
        name:
          - openshift
          - pyyaml
          - kubernetes 


    - name: Wait for k0s node to come up
      kubernetes.core.k8s_info:
        kind: Pod
        wait: true
        label_selectors:
          - name=ansible-awx
          - part-of=ansible-awx
          - control-plane=controller-manager
        namespace: ansible-awx
        wait_sleep: 5
        wait_timeout: 15