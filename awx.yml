- name: Install minikube
  hosts: "{{ host }}"
  vars_files: 
    - vars/vars.yml


  tasks:

  - name: Install k3s
    include_tasks: "playbooks/k3s.yml"

  - name: install prerequisites
    become: yes
    ansible.builtin.apt:
      pkg:
        - ca-certificates
        - curl
        - make
        - git



  - block: 

      - name: Check latest version
        uri:
          url: "{{ awx_githubapi_url }}"
          return_content: true
        register: awx_latest

      - name: Define version to checkout
        set_fact: checkout_version="{{ awx_latest.json.tag_name }}"

          
        when: awx_operator_version == 'latest'

      - name: Print latest checkout_version variable
        debug:
          msg: "{{ checkout_version }}" 

  - name: Git checkout
    ansible.builtin.git:
      repo: '{{ awx_operator_git_link }}'
      dest: "{{ awx_operator_git_name }}/"
      version: "{{ checkout_version }}"
      force: yes

  - name: Git checkout
    ansible.builtin.git:
      repo: '{{ awx_git_helper_url }}'
      dest: "{{ awx_git_helper_dir }}/"
      version: "{{ awx_git_helper_version }}"
      force: yes  

  - name: Make AWX operator deploy
    ansible.builtin.command: make deploy
    args:
      chdir: "{{ awx_operator_git_name }}/"
    environment:
         NAMESPACE: "{{ NAMESPACE }}"

  - name: Waiting for Operator to start
    shell: kubectl get pods -o json --namespace=awx --selector control-plane=controller-manager
    register: kubectl_get_pods
    until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
    retries: 3
    delay: 90


  - name: Make self-signed certificate
    ansible.builtin.command: openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -out ./base/tls.crt -keyout ./base/tls.key -subj "/CN={{AWX_HOST}}/O={{AWX_HOST}}" -addext "subjectAltName = DNS:{{AWX_HOST}}"
    args:
      chdir: "{{ awx_git_helper_dir }}/"
    environment:
         NAMESPACE: "{{ NAMESPACE }}"

  - name: Set password
    ansible.builtin.lineinfile:
      path: "{{ awx_git_helper_dir }}/base/kustomization.yaml"
      regexp: '     - password=*'
      line: "     - password={{ awx_password }}"
      backrefs: yes

  - name: Set password
    ansible.builtin.lineinfile:
      path: "{{ awx_git_helper_dir }}/base/kustomization.yaml"
      regexp: '      - password=*'
      line: "      - password={{ awx_password }}"
      backrefs: yes

  - name: Set hostname
    ansible.builtin.lineinfile:
      path: "{{ awx_git_helper_dir }}/base/kustomization.yaml"
      regexp: '  hostname: awx.example.com'
      line: "  hostname: {{ AWX_HOST }}"
      backrefs: yes


  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /data/postgres-13
      state: directory
      mode: '0755'

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /data/projects
      state: directory
      owner: 1000
      group: 0

  # - name: Deploy AWX
  #   ansible.builtin.command: kubectl apply -k "{{ awx_git_helper_dir }}/base"
  #   environment:
  #     NAMESPACE: "{{ NAMESPACE }}"









  